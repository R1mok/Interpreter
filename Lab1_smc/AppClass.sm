// -*- tab-width: 4; -*-

%{
//
// The contents of this file are subject to the Mozilla Public
// License Version 1.1 (the "License"); you may not use this file
// except in compliance with the License. You may obtain a copy of
// the License at http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
// 
// The Original Code is State Machine Compiler (SMC).
// 
// The Initial Developer of the Original Code is Charles W. Rapp.
// Portions created by Charles W. Rapp are
// Copyright (C) 2000 - 2003 Charles W. Rapp.
// All Rights Reserved.
//
// Contributor(s): 
//
// State Map
//	This state map is recognizes the regular expression 0*1*.
//
// RCS ID
// $Id$
//
// CHANGE LOG
// $Log$
// Revision 1.5  2005/05/28 13:31:16  cwrapp
// Updated C++ examples.
//
// Revision 1.1  2005/02/21 14:19:18  charlesr
// Added spaces around header file name to test SMC.
//
// Revision 1.0  2003/12/14 19:11:57  charlesr
// Initial revision
//
%}

%start Map1::Start
%class AppClass
%header   AppClass.h

%map Map1
%%
// State		Transition		End State		Action(s)
Start
{
//				Zero			Zeros			{}
//				One				Ones			{}
//				Unknown			Error			{}
//				EOS				OK				{Acceptable();}
				
				tel				Tel				{}
				sms				Sms				{}
				fax				Fax				{}
				Unknown			Start			{Unacceptable();}
}

Tel
{
				Unknown			Start			{Unacceptable();}
				number			Number			{}
				
}
Sms
{
				Unknown			Start			{Unacceptable();}
				number			Number			{}
}
Fax
{
				Unknown			Start			{Unacceptable();}
				number			Number			{}
}
Number
{
				Unknown			Start			{Unacceptable();}
				digit			Digit			{}
}
Digit
{
				Unknown			Start			{Unacceptable();}
				digit			Digit			{}
				Message			MessageText		{}
				EOS				Start			{Acceptable();}
				number			Number			{}
}
MessageText
{
				Unknown			Start			{Unacceptable();}
				CorrectMessage	Correct			{}
				EOS				Start			{Acceptable();}
}
Correct
{
				Unknown			Start			{Unacceptable();}
				CorrectMessage	Correct			{}
				EOS				Start			{Acceptable();}
}
Error
{
				number			nil				{}
				digit			nil				{}
				Message			nil				{}
				CorrectMessage	nil				{}
				Unknown			nil				{}
				EOS				Start			{Unacceptable();}
}

%%
