// -*- tab-width: 4; -*-

%{
//
// The contents of this file are subject to the Mozilla Public
// License Version 1.1 (the "License"); you may not use this file
// except in compliance with the License. You may obtain a copy of
// the License at http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
// implied. See the License for the specific language governing
// rights and limitations under the License.
// 
// The Original Code is State Machine Compiler (SMC).
// 
// The Initial Developer of the Original Code is Charles W. Rapp.
// Portions created by Charles W. Rapp are
// Copyright (C) 2000 - 2003 Charles W. Rapp.
// All Rights Reserved.
//
// Contributor(s): 
//
// State Map
//	This state map is recognizes the regular expression 0*1*.
//
// RCS ID
// $Id$
//
// CHANGE LOG
// $Log$
// Revision 1.5  2005/05/28 13:31:16  cwrapp
// Updated C++ examples.
//
// Revision 1.1  2005/02/21 14:19:18  charlesr
// Added spaces around header file name to test SMC.
//
// Revision 1.0  2003/12/14 19:11:57  charlesr
// Initial revision
//
%}

%start Map1::Start
%class AppClass
%header   AppClass.h

%map Map1
%%
// State		Transition		End State		Action(s)
Start
{
				
				tel_fax			TEL_FAX			{notSMS();}
				sms				SMS				{isSMS();}
				wrong_begin		Start			{Unacceptable();}
}

TEL_FAX
{
				wrong_number	Start			{Unacceptable();}
				number			NUMBER			{}
				
}
SMS
{
				wrong_number	Start			{Unacceptable();}
				number			NUMBER			{}
}
NUMBER
{
				wrong_number	Start			{Unacceptable();}
				plus			PLUS			{kIsNull();}
}
DIGIT
{
				wrong_number	Start			{Unacceptable();}
				digit			DIGIT			{kPlusOne();}
				message			MESSAGE 		{isCorrectNumber();}
				EOS				Start			{Acceptable();}
				number			NUMBER			{isCorrectNumber();}
}
PLUS
{
				wrong_number	Start			{Unacceptable();}
				digit			DIGIT			{kPlusOne();}
				message			MESSAGE			{}
}
MESSAGE
{
				wrong_message	Start			{Unacceptable();}
				cormes			CORRECT			{isCorrectMess();}
				EOS				Start			{Acceptable();}
				plus			MESSAGE			{}
				digit			MESSAGE			{}
				number			MESSAGE			{}
				message			MESSAGE			{mPlusOne();}
}
CORRECT
{
				cormes			CORRECT			{}
				EOS				Start			{Acceptable();}
				wrong_message	Start			{Unacceptable();}
}

%%
